package OOP;

//  Abstract: В java може абстрактним бути 2 речі: клас і метод. Щоб створити абстрактний клас ми пишемо, abstract.
//  У абстрактному класу не має жодних обмежень створити геттери, сеттери, конструктори.
//  Ми не можемо створити об'єкт абстрактного класу, але ми можемо створити об'єкт типу абстрактного класу.
//  Абстрактні класи просять створити йому нащадків.

//  Для прикладу, у нас є класи GeometricFigure і Triangle, який його успадковує. Створимо метод для розрахування периметру
//  і площі фігур. Ми пишемо методи розрахування периметру і площі в класі GeometricFigure тому що всі нащі фігури
//  будуть мати можливість розрахувати площу і периметр, а потім кількість класів нащадків будуть лише збільшуватися.
//  І потім, за допомогою поліморфізму, з'єднати це все до єдиного цілого і для всіх них порахувати площу. У цьому нам
//  можуть допомогти абстрактні методи.

//  Абстрактний клас - це клас, який не може мати екзимплярів. Якщо клас має хоча б один абстрактний метод, він мусить
//  бути абстрактний. Якщо у класі безліч не абстрактних методів, полів у класі і в один момент, у нас появляється
//  хоч один абстрактний метод, у нас є 2 варіанти: дати абстрактному методу тіло (адже абстрактні методи не мають тіла,
//  метод лише із сигнатурою) або назвати наший клас абстрактним. Метод є абстрактним і ми не знаємо, як він буде
//  виглядати, тому він аж проситься щоб ми зробити його Override (для кожого нащадка) - дати йому тіло, дайти призначення.
//  Якшо ми не імплементуємо методи абстрактного класу в класах нащадках, у нас буде помилка, щоб ми імплементували методи.
//  У нас є 2 варіанти: або імплементувати всі методи або зробити клас нащадок абстрактним

public abstract class GeometricFigure {

    private int perimeter;
    private int square;

    public GeometricFigure() {

    }

    public GeometricFigure(int perimeter, int square) {
        this.perimeter = perimeter;
        this.square = square;
    }

    public int getPerimeter() {
        return perimeter;
    }

    public int getSquare() {
        return square;
    }

    public abstract int calculatePerimeter();
    public abstract int calculateSquare();

}
